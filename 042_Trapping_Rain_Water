class Solution:
    def trap(self, height: List[int]) -> int:
        l_wall = r_wall = 0
        n = len(height)
        max_left = [0]*n
        max_right = [0]*n

        #first iterate through the array and create two arrays with max left and right heights for each index
        for i in range(n):
            j = -i -1 #start j at the end of the height array and walk backwards
                        #as i gets bigger
            max_left[i] = l_wall
            max_right[j] = r_wall
            l_wall = max(l_wall, height[i])
            r_wall = max(r_wall, height[j])
        
        answer = 0
        for i in range(n):
            pot_storage = min(max_left[i], max_right[i])
            if pot_storage - height[i] > 0:
                answer += pot_storage - height[i]
        return answer
