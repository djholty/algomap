class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        n = len(nums)
        l_arr = [0]*n
        r_arr = [0]*n
        l_mult = r_mult = 1

        for i in range(n):
            j = -i -1  #start iterating backwards from the end
            l_arr[i] = l_mult 
            r_arr[j] = r_mult
            l_mult *= nums[i] #update the l_mult with the cumulative multiple on the left side
            r_mult *= nums[j] #update the r_mult with the cumulative multiple

        return [l*r for l, r in zip(l_arr, r_arr)]
